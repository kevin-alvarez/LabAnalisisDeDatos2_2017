median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Clasificación Muestra")
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
p1
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Clasificación Muestra")+theme(plot.title = element_text(hjust = 0.5))
p1
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
#Clean state
d <- c()
for(i in data$state){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
data$state <- d
#Var Vectors
age <- as.numeric(data$age)
TSH <- as.numeric(data$TSH)
T3 <- as.numeric(data$T3)
TT4 <- as.numeric(data$TT4)
T4U <- as.numeric(data$T4U)
FTI <- as.numeric(data$FTI)
mean_age <- mean(age)
median_age <- median(age)
var_age <- var(age)
moda_age <- mlv(age,method = "mfv")[1]
mean_TSH <- mean(TSH)
median_TSH <- median(TSH)
var_TSH <- var(TSH)
moda_TSH <- mlv(TSH,method = "mfv")[1]
mean_T3 <- mean(T3)
median_T3 <- median(T3)
var_T3 <- var(T3)
moda_T3 <- mlv(T3,method = "mfv")[1]
mean_TT4 <- mean(TT4)
median_TT4 <- median(TT4)
var_TT4 <- var(TT4)
moda_TT4 <- mlv(TT4,method = "mfv")[1]
mean_T4U <- mean(T4U)
median_T4U <- median(T4U)
var_T4U <- var(T4U)
moda_T4U <- mlv(T4U,method = "mfv")[1]
mean_FTI <- mean(FTI)
median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Classification")+theme(plot.title = element_text(hjust = 0.5))
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Sex")+theme(plot.title = element_text(hjust = 0.5))
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Pregnant")+theme(plot.title = element_text(hjust = 0.5))
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Thyroid Surgery")+theme(plot.title = element_text(hjust = 0.5))
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs I131 Treatment")+theme(plot.title = element_text(hjust = 0.5))
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Lithium")+theme(plot.title = element_text(hjust = 0.5))
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Goitre")+theme(plot.title = element_text(hjust = 0.5))
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
p1
p2
p3
p4
p5
p6
p7
dat <- data[data$sex == "F"]
dat <- data[data$sex == "F",]
datM <- data[data$set == "M",]
datM <- data[data$sex == "M",]
dat <- data[(data$lithium == "t" & data$state == "compensated hypothyroid"),]
View(dat)
View(data)
dat <- data[data$lithium == "t"]
dat <- data[data$lithium == "t",]
dat
View(dat)
boxplot(dat)
datM <- as.numeric(dat[dat$TSH])
datM <- as.numeric(dat[dat$TSH],)
datM <- as.numeric(dat$TSH)
datM
datM <- data[data$lithium == "f"]
datM <- data[data$lithium == "f",]
View(datM)
meanLit <- as.numeric(dat$TSH)
meanNonLit <- as.numeric(datM$TSH)
boxplot(meanLit, meanNonLit)
mean(meanLit)
mean(meanNonLit)
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
#Clean state
d <- c()
for(i in data$state){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
data$state <- d
#Var Vectors
age <- as.numeric(data$age)
TSH <- as.numeric(data$TSH)
T3 <- as.numeric(data$T3)
TT4 <- as.numeric(data$TT4)
T4U <- as.numeric(data$T4U)
FTI <- as.numeric(data$FTI)
mean_age <- mean(age)
median_age <- median(age)
var_age <- var(age)
moda_age <- mlv(age,method = "mfv")[1]
mean_TSH <- mean(TSH)
median_TSH <- median(TSH)
var_TSH <- var(TSH)
moda_TSH <- mlv(TSH,method = "mfv")[1]
mean_T3 <- mean(T3)
median_T3 <- median(T3)
var_T3 <- var(T3)
moda_T3 <- mlv(T3,method = "mfv")[1]
mean_TT4 <- mean(TT4)
median_TT4 <- median(TT4)
var_TT4 <- var(TT4)
moda_TT4 <- mlv(TT4,method = "mfv")[1]
mean_T4U <- mean(T4U)
median_T4U <- median(T4U)
var_T4U <- var(T4U)
moda_T4U <- mlv(T4U,method = "mfv")[1]
mean_FTI <- mean(FTI)
median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Classification")+theme(plot.title = element_text(hjust = 0.5))
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Sex")+theme(plot.title = element_text(hjust = 0.5))
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Pregnant")+theme(plot.title = element_text(hjust = 0.5))
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Thyroid Surgery")+theme(plot.title = element_text(hjust = 0.5))
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs I131 Treatment")+theme(plot.title = element_text(hjust = 0.5))
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Lithium")+theme(plot.title = element_text(hjust = 0.5))
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Goitre")+theme(plot.title = element_text(hjust = 0.5))
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
resCorrelate
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
#Clean state
d <- c()
for(i in data$state){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
data$state <- d
#Var Vectors
age <- as.numeric(data$age)
TSH <- as.numeric(data$TSH)
T3 <- as.numeric(data$T3)
TT4 <- as.numeric(data$TT4)
T4U <- as.numeric(data$T4U)
FTI <- as.numeric(data$FTI)
mean_age <- mean(age)
median_age <- median(age)
var_age <- var(age)
moda_age <- mlv(age,method = "mfv")[1]
mean_TSH <- mean(TSH)
median_TSH <- median(TSH)
var_TSH <- var(TSH)
moda_TSH <- mlv(TSH,method = "mfv")[1]
mean_T3 <- mean(T3)
median_T3 <- median(T3)
var_T3 <- var(T3)
moda_T3 <- mlv(T3,method = "mfv")[1]
mean_TT4 <- mean(TT4)
median_TT4 <- median(TT4)
var_TT4 <- var(TT4)
moda_TT4 <- mlv(TT4,method = "mfv")[1]
mean_T4U <- mean(T4U)
median_T4U <- median(T4U)
var_T4U <- var(T4U)
moda_T4U <- mlv(T4U,method = "mfv")[1]
mean_FTI <- mean(FTI)
median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Classification")+theme(plot.title = element_text(hjust = 0.5))
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Sex")+theme(plot.title = element_text(hjust = 0.5))
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Pregnant")+theme(plot.title = element_text(hjust = 0.5))
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Thyroid Surgery")+theme(plot.title = element_text(hjust = 0.5))
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs I131 Treatment")+theme(plot.title = element_text(hjust = 0.5))
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Lithium")+theme(plot.title = element_text(hjust = 0.5))
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Goitre")+theme(plot.title = element_text(hjust = 0.5))
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
resCorrelate
library("ggplot2")
library("modeest")
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
#Clean state
d <- c()
for(i in data$state){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
data$state <- d
#Var Vectors
age <- as.numeric(data$age)
TSH <- as.numeric(data$TSH)
T3 <- as.numeric(data$T3)
TT4 <- as.numeric(data$TT4)
T4U <- as.numeric(data$T4U)
FTI <- as.numeric(data$FTI)
mean_age <- mean(age)
median_age <- median(age)
var_age <- var(age)
moda_age <- mlv(age,method = "mfv")[1]
mean_TSH <- mean(TSH)
median_TSH <- median(TSH)
var_TSH <- var(TSH)
moda_TSH <- mlv(TSH,method = "mfv")[1]
mean_T3 <- mean(T3)
median_T3 <- median(T3)
var_T3 <- var(T3)
moda_T3 <- mlv(T3,method = "mfv")[1]
mean_TT4 <- mean(TT4)
median_TT4 <- median(TT4)
var_TT4 <- var(TT4)
moda_TT4 <- mlv(TT4,method = "mfv")[1]
mean_T4U <- mean(T4U)
median_T4U <- median(T4U)
var_T4U <- var(T4U)
moda_T4U <- mlv(T4U,method = "mfv")[1]
mean_FTI <- mean(FTI)
median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Classification")+theme(plot.title = element_text(hjust = 0.5))
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Sex")+theme(plot.title = element_text(hjust = 0.5))
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Pregnant")+theme(plot.title = element_text(hjust = 0.5))
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Thyroid Surgery")+theme(plot.title = element_text(hjust = 0.5))
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs I131 Treatment")+theme(plot.title = element_text(hjust = 0.5))
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Lithium")+theme(plot.title = element_text(hjust = 0.5))
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Goitre")+theme(plot.title = element_text(hjust = 0.5))
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
p2
p1
library("ggplot2")
library("modeest")
#Escribir direccion del archivo
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
#Clean state
d <- c()
for(i in data$state){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
data$state <- d
#Var Vectors
age <- as.numeric(data$age)
TSH <- as.numeric(data$TSH)
T3 <- as.numeric(data$T3)
TT4 <- as.numeric(data$TT4)
T4U <- as.numeric(data$T4U)
FTI <- as.numeric(data$FTI)
mean_age <- mean(age)
median_age <- median(age)
var_age <- var(age)
moda_age <- mlv(age,method = "mfv")[1]
mean_TSH <- mean(TSH)
median_TSH <- median(TSH)
var_TSH <- var(TSH)
moda_TSH <- mlv(TSH,method = "mfv")[1]
mean_T3 <- mean(T3)
median_T3 <- median(T3)
var_T3 <- var(T3)
moda_T3 <- mlv(T3,method = "mfv")[1]
mean_TT4 <- mean(TT4)
median_TT4 <- median(TT4)
var_TT4 <- var(TT4)
moda_TT4 <- mlv(TT4,method = "mfv")[1]
mean_T4U <- mean(T4U)
median_T4U <- median(T4U)
var_T4U <- var(T4U)
moda_T4U <- mlv(T4U,method = "mfv")[1]
mean_FTI <- mean(FTI)
median_FTI <- median(FTI)
var_FTI <- var(FTI)
moda_FTI <- mlv(FTI,method = "mfv")[1]
#Plots (package: ggplot2)
#Gráfico clasificacion de la muestra.
p1 <- ggplot(data, aes(data$state))+geom_bar()+theme_bw()+scale_fill_brewer(palette = "Set1")+ggtitle("Classification")+theme(plot.title = element_text(hjust = 0.5))
#State vs sex
p2 <- ggplot(data, aes(data$state, fill = data$sex))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Sex")+theme(plot.title = element_text(hjust = 0.5))
#State vs pregnant
p3 <- ggplot(data, aes(data$state, fill = data$pregnant))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Pregnant")+theme(plot.title = element_text(hjust = 0.5))
#State vs thyroid.surgery
p4 <- ggplot(data, aes(data$state, fill = data$thyroid.surgery))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Thyroid Surgery")+theme(plot.title = element_text(hjust = 0.5))
#State vs I131.treatment
p5 <- ggplot(data, aes(data$state, fill = data$I131.treatment))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs I131 Treatment")+theme(plot.title = element_text(hjust = 0.5))
#State vs lithium
p6 <- ggplot(data, aes(data$state, fill = data$lithium))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Lithium")+theme(plot.title = element_text(hjust = 0.5))
#State vs goitre
p7 <- ggplot(data, aes(data$state, fill = data$goitre))+geom_bar(position = position_dodge())+theme_bw()+scale_fill_brewer(palette = "Paired")+ggtitle("Class vs Goitre")+theme(plot.title = element_text(hjust = 0.5))
#Correlation
corData <- data.frame(age, TSH, T3, TT4, T4U, FTI)
resCorrelate <- cor(corData, method = "pearson")
View(corData)
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
View(rawdata)
rawdata <- read.csv("c:\\Users\\Chocho\\Desktop\\Analisis de Datos\\Laboratorio\\Lab 1\\allhypo_filtered.csv", header=TRUE, stringsAsFactors=FALSE)
data <- rawdata[(rawdata$age!="?" & rawdata$sex != "?" & rawdata$TSH.measured=="t" & rawdata$T3.measured=="t" & rawdata$TT4.measured=="t" & rawdata$T4U.measured=="t" & rawdata$FTI.measured=="t"),]
version
install.packages("arules")
install.packages("arules")
install.packages("arulesViz")
library("arulesViz")
setwd("C:/Users/Chocho/Desktop/Analisis de Datos/Laboratorio/Lab 3")
library("arules")
library("arulesViz")
rawdata <- read.csv("allhypo.data", header = FALSE, sep = ",", stringsAsFactors = FALSE)
colnames(rawdata) <- c("age", "sex", "on.thyroxine", "query.on.thyroxine", "on.antithyroid.medication", "sick", "pregnant", "thyroid.surgery", "I131.treatment", "query.hypothyroid", "query.hyperthyroid", "lithium", "goitre", "tumor", "hypopituitary", "psych", "TSH.measured", "TSH", "T3.measured", "T3", "TT4.measured", "TT4", "T4U.measured", "T4U", "FTI.measured", "FTI", "TBG.measured", "TBG", "referral.source", "clasification|id")
#delete id from clasification|id column
d <- c()
for(i in rawdata$`clasification|id`){
d <- c(d, strsplit(i, ".", fixed = TRUE)[[1]][1])
}
colnames(rawdata)[30] <- "clasification"
rawdata$clasification <- as.factor(d)
#data pre-processing
#delete NA values
data <- rawdata[(rawdata$age!="?" & rawdata$sex!="?" & rawdata$on.thyroxine!="?" & rawdata$query.on.thyroxine!="?" & rawdata$on.antithyroid.medication!="?" & rawdata$sick!="?" & rawdata$pregnant!="?" & rawdata$thyroid.surgery!="?" & rawdata$I131.treatment!="?" & rawdata$query.hypothyroid!="?" & rawdata$query.hyperthyroid!="?" & rawdata$lithium!="?" & rawdata$goitre!="?" & rawdata$tumor!="?" & rawdata$hypopituitary!="?" & rawdata$psych!="?" & rawdata$TSH.measured!="f" & rawdata$T3.measured!="f" & rawdata$TT4.measured!="f" & rawdata$T4U.measured!="f" & rawdata$FTI.measured!="f"),]
#delete variable TBG
data$TBG.measured <- NULL
data$TBG <- NULL
#delete measuring variables
data$TSH.measured <- NULL
data$T3.measured <- NULL
data$TT4.measured <- NULL
data$T4U.measured <- NULL
data$FTI.measured <- NULL
#delete referral.source variable
data$referral.source <- NULL
#data format transform
#nominal variables
data$sex <- as.factor(data$sex)
data$on.thyroxine <- as.factor(data$on.thyroxine)
data$query.on.thyroxine <- as.factor(data$query.on.thyroxine)
data$on.antithyroid.medication <- as.factor(data$on.antithyroid.medication)
data$sick <- as.factor(data$sick)
data$pregnant <- as.factor(data$pregnant)
data$thyroid.surgery <- as.factor(data$thyroid.surgery)
data$I131.treatment <- as.factor(data$thyroid.surgery)
data$query.hypothyroid <- as.factor(data$query.hypothyroid)
data$query.hyperthyroid <- as.factor(data$query.hyperthyroid)
data$lithium <- as.factor(data$lithium)
data$goitre <- as.factor(data$goitre)
data$tumor <- as.factor(data$tumor)
data$hypopituitary <- as.factor(data$hypopituitary)
data$psych <- as.factor(data$psych)
#continuous variables
data$age <-as.numeric(data$age)
data$TSH <- as.numeric(data$TSH)
data$T3 <- as.numeric(data$T3)
data$TT4 <- as.numeric(data$TT4)
data$T4U <- as.numeric(data$T4U)
data$FTI <- as.numeric(data$FTI)
#continuous variables and clasification to binary
#age values
child.adult_border <- 18
adult.oldman_border <- 60
#min values
TSH.min <- 0.4
T3.min <- 1.07
TT4.min <- 64.0
T4U.min <- 0.7
FTI.min <- 33.108
#max values
TSH.max <- 4.0
T3.max <- 3.37
TT4.max <- 154.0
T4U.max <- 1.8
FTI.max <- 135.191
#vectors(zeros)
child <- integer(length(data[[1]]))
adult <- integer(length(data[[1]]))
oldman <- integer(length(data[[1]]))
TSH.under <- integer(length(data[[1]]))
T3.under <- integer(length(data[[1]]))
TT4.under <- integer(length(data[[1]]))
T4U.under <- integer(length(data[[1]]))
FTI.under <- integer(length(data[[1]]))
TSH.over <- integer(length(data[[1]]))
T3.over <- integer(length(data[[1]]))
TT4.over <- integer(length(data[[1]]))
T4U.over <- integer(length(data[[1]]))
FTI.over <- integer(length(data[[1]]))
#change data to binary
for(i in 1:length(data[[1]])){
#age
if(data$age[i] < child.adult_border){
child[i] <- 1
}else if(data$age[i] >= child.adult_border & data$age[i] < adult.oldman_border){
adult[i] <- 1
}else if(data$age[i] >= adult.oldman_border){
oldman[i] <- 1
}
#hormones
if(data$TSH[i] >= TSH.max){
TSH.over[i] <- 1
}else if(data$TSH[i] <= TSH.min){
TSH.under[i] <- 1
}
if(data$T3[i] >= T3.max){
T3.over[i] <- 1
}else if(data$T3[i] <= T3.min){
T3.under[i] <- 1
}
if(data$TT4[i] >= TT4.max){
TT4.over[i] <- 1
}else if(data$TT4[i] <= TT4.min){
TT4.under[i] <- 1
}
if(data$T4U[i] >= T4U.max){
T4U.over[i] <- 1
}else if(data$T4U[i] <= T4U.min){
T4U.under[i] <- 1
}
if(data$FTI[i] >= FTI.max){
FTI.over[i] <- 1
}else if(data$FTI[i] <= FTI.min){
FTI.under[i] <- 1
}
}
data$clasification <- ifelse(data$clasification %in% c("primary hypothyroid", "secondary hypothyroid", "compensated hypothyroid"), 1, 0)
#replace vectors on data frame
data$age <- NULL
data$TSH <- NULL
data$T3 <- NULL
data$TT4 <- NULL
data$T4U <- NULL
data$FTI <- NULL
data$age.child <- as.factor(child)
data$age.adult <- as.factor(adult)
data$age.oldman <- as.factor(oldman)
data$TSH.over <- as.factor(TSH.over)
data$T3.over <- as.factor(T3.over)
data$TT4.over <- as.factor(TT4.over)
data$T4U.over <- as.factor(T4U.over)
data$FTI.over <- as.factor(FTI.over)
data$TSH.under <- as.factor(TSH.under)
data$T3.under <- as.factor(T3.under)
data$TT4.under <- as.factor(TT4.under)
data$T4U.under <- as.factor(T4U.under)
data$FTI.under <- as.factor(FTI.under)
data$clasification <- as.factor(data$clasification)
names(data)[names(data) == "clasification"] <- "hypothyroid"
#rules without restrictions, with min 2 antecedents and 1 consecuent [support=0.5, Confidence=0.8]
rules <- apriori(data, parameter = list(minlen=2, support=0.01, confidence=0.5, maxlen=5), appearance = list(rhs=c("hypothyroid=1"), default="lhs"))
#sort rules
rules.sorted <- sort(rules, by="lift")
inspect(head(rules.sorted, 100))
#Clean Redundant Rules
#subset.matrix<-is.subset(rules.sorted,rules.sorted)
#subset.matrix[lower.tri(subset.matrix,diag=T)]<-NA
#redundant<-colSums(subset.matrix,na.rm = T)>=1
#rules.notRed<-rules.sorted[!redundant]
rules.sorted <- sort(rules, by="support")
inspect(head(rules.sorted, 100))
View(data)
